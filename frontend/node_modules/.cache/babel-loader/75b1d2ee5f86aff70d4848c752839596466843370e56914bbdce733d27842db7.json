{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WEB-POS\\\\WEB-POS\\\\src\\\\features\\\\calendar\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport CalendarView from '../../components/CalendarView';\nimport moment from 'moment';\nimport { CALENDAR_INITIAL_EVENTS } from '../../utils/dummyData';\nimport { useDispatch } from 'react-redux';\nimport { openRightDrawer } from '../common/rightDrawerSlice';\nimport { RIGHT_DRAWER_TYPES } from '../../utils/globalConstantUtil';\nimport { showNotification } from '../common/headerSlice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_EVENTS = CALENDAR_INITIAL_EVENTS;\nfunction Calendar() {\n  _s();\n  const dispatch = useDispatch();\n  const [events, setEvents] = useState(INITIAL_EVENTS);\n\n  // Add your own Add Event handler, like opening modal or random event addition\n  // Format - {title :\"\", theme: \"\", startTime : \"\", endTime : \"\"}, typescript version comming soon :)\n  const addNewEvent = date => {\n    let randomEvent = INITIAL_EVENTS[Math.floor(Math.random() * 10)];\n    let newEventObj = {\n      title: randomEvent.title,\n      theme: randomEvent.theme,\n      startTime: moment(date).startOf('day'),\n      endTime: moment(date).endOf('day')\n    };\n    setEvents([...events, newEventObj]);\n    dispatch(showNotification({\n      message: \"New Event Added!\",\n      status: 1\n    }));\n  };\n\n  // Open all events of current day in sidebar \n  const openDayDetail = ({\n    filteredEvents,\n    title\n  }) => {\n    dispatch(openRightDrawer({\n      header: title,\n      bodyType: RIGHT_DRAWER_TYPES.CALENDAR_EVENTS,\n      extraObject: {\n        filteredEvents\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CalendarView, {\n      calendarEvents: events,\n      addNewEvent: addNewEvent,\n      openDayDetail: openDayDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(Calendar, \"Q+sA2CzbTvVVZxKSdxwDYGu1QDA=\", false, function () {\n  return [useDispatch];\n});\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["useState","CalendarView","moment","CALENDAR_INITIAL_EVENTS","useDispatch","openRightDrawer","RIGHT_DRAWER_TYPES","showNotification","jsxDEV","_jsxDEV","Fragment","_Fragment","INITIAL_EVENTS","Calendar","_s","dispatch","events","setEvents","addNewEvent","date","randomEvent","Math","floor","random","newEventObj","title","theme","startTime","startOf","endTime","endOf","message","status","openDayDetail","filteredEvents","header","bodyType","CALENDAR_EVENTS","extraObject","children","calendarEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/WEB-POS/WEB-POS/src/features/calendar/index.js"],"sourcesContent":["import { useState } from 'react'\r\nimport CalendarView from '../../components/CalendarView'\r\nimport moment from 'moment'\r\nimport { CALENDAR_INITIAL_EVENTS } from '../../utils/dummyData'\r\nimport { useDispatch } from 'react-redux'\r\nimport { openRightDrawer } from '../common/rightDrawerSlice'\r\nimport { RIGHT_DRAWER_TYPES } from '../../utils/globalConstantUtil'\r\nimport { showNotification } from '../common/headerSlice'\r\n\r\n\r\n\r\nconst INITIAL_EVENTS = CALENDAR_INITIAL_EVENTS\r\n\r\nfunction Calendar(){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [events, setEvents] = useState(INITIAL_EVENTS)\r\n\r\n    // Add your own Add Event handler, like opening modal or random event addition\r\n    // Format - {title :\"\", theme: \"\", startTime : \"\", endTime : \"\"}, typescript version comming soon :)\r\n    const addNewEvent = (date) => {\r\n        let randomEvent = INITIAL_EVENTS[Math.floor(Math.random() * 10)]\r\n        let newEventObj = {title : randomEvent.title, theme : randomEvent.theme, startTime : moment(date).startOf('day'), endTime : moment(date).endOf('day')}\r\n        setEvents([...events, newEventObj])\r\n        dispatch(showNotification({message : \"New Event Added!\", status : 1}))\r\n    }\r\n\r\n    // Open all events of current day in sidebar \r\n    const openDayDetail = ({filteredEvents, title}) => {\r\n        dispatch(openRightDrawer({header : title, bodyType : RIGHT_DRAWER_TYPES.CALENDAR_EVENTS, extraObject : {filteredEvents}}))\r\n    }\r\n\r\n    return(\r\n        <>\r\n           <CalendarView \r\n                calendarEvents={events}\r\n                addNewEvent={addNewEvent}\r\n                openDayDetail={openDayDetail}\r\n           />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calendar"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,uBAAuB,QAAQ,uBAAuB;AAC/D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,gBAAgB,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIxD,MAAMC,cAAc,GAAGT,uBAAuB;AAE9C,SAASU,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAEf,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAACY,cAAc,CAAC;;EAEpD;EACA;EACA,MAAMM,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIC,WAAW,GAAGR,cAAc,CAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAChE,IAAIC,WAAW,GAAG;MAACC,KAAK,EAAGL,WAAW,CAACK,KAAK;MAAEC,KAAK,EAAGN,WAAW,CAACM,KAAK;MAAEC,SAAS,EAAGzB,MAAM,CAACiB,IAAI,CAAC,CAACS,OAAO,CAAC,KAAK,CAAC;MAAEC,OAAO,EAAG3B,MAAM,CAACiB,IAAI,CAAC,CAACW,KAAK,CAAC,KAAK;IAAC,CAAC;IACtJb,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEQ,WAAW,CAAC,CAAC;IACnCT,QAAQ,CAACR,gBAAgB,CAAC;MAACwB,OAAO,EAAG,kBAAkB;MAAEC,MAAM,EAAG;IAAC,CAAC,CAAC,CAAC;EAC1E,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAAC;IAACC,cAAc;IAAET;EAAK,CAAC,KAAK;IAC/CV,QAAQ,CAACV,eAAe,CAAC;MAAC8B,MAAM,EAAGV,KAAK;MAAEW,QAAQ,EAAG9B,kBAAkB,CAAC+B,eAAe;MAAEC,WAAW,EAAG;QAACJ;MAAc;IAAC,CAAC,CAAC,CAAC;EAC9H,CAAC;EAED,oBACIzB,OAAA,CAAAE,SAAA;IAAA4B,QAAA,eACG9B,OAAA,CAACR,YAAY;MACRuC,cAAc,EAAExB,MAAO;MACvBE,WAAW,EAAEA,WAAY;MACzBe,aAAa,EAAEA;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC;EAAC,gBACH,CAAC;AAEX;AAAC9B,EAAA,CA7BQD,QAAQ;EAAA,QAEIT,WAAW;AAAA;AAAAyC,EAAA,GAFvBhC,QAAQ;AA+BjB,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}