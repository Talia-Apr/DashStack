{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\DashStack\\\\frontend\\\\src\\\\features\\\\settings\\\\profilesettings\\\\index.js\",\n  _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport { showNotification } from '../../common/headerSlice';\nimport InputText from '../../../components/Input/InputText';\nimport TextAreaInput from '../../../components/Input/TextAreaInput';\nimport ToogleInput from '../../../components/Input/ToogleInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfileSettings() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [password, setPassword] = useState('');\n  const submitForm = async e => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n    try {\n      await axios.post('http://localhost:5000/users', {\n        email: email,\n        password: password\n      });\n    } catch (error) {\n      if (error.response) {\n        console.log(\"Error Response:\", error.response.data);\n        setErrorMessage(error.response.data.msg || \"An error occurred\");\n      } else {\n        setErrorMessage(\"Something went wrong. Please try again.\");\n      }\n    }\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n  };\n  const updateFormValue = ({\n    updateType,\n    value\n  }) => {\n    setErrorMessage(\"\");\n    if (updateType === \"email\") setEmail(value);\n    if (updateType === \"password\") setPassword(value);\n  };\n  const dispatch = useDispatch();\n\n  // Call API to update profile settings changes\n  const updateProfile = () => {\n    dispatch(showNotification({\n      message: \"Profile Updated\",\n      status: 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TitleCard, {\n      title: \"Profile Settings\",\n      topMargin: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Name\",\n          defaultValue: \"Alex\",\n          updateFormValue: updateFormValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Email Id\",\n          defaultValue: \"alex@dashwind.com\",\n          updateFormValue: updateFormValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Role\",\n          defaultValue: \"Admin\",\n          updateFormValue: updateFormValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Password\",\n          defaultValue: \"*********\",\n          updateFormValue: updateFormValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary float-right\",\n          onClick: () => updateProfile(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ProfileSettings, \"uRg0CO03iLFXG5rcUJ+AWcbHvbY=\", false, function () {\n  return [useDispatch];\n});\n_c = ProfileSettings;\nexport default ProfileSettings;\nvar _c;\n$RefreshReg$(_c, \"ProfileSettings\");","map":{"version":3,"names":["moment","useEffect","useState","axios","jwtDecode","useNavigate","useDispatch","useSelector","TitleCard","showNotification","InputText","TextAreaInput","ToogleInput","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileSettings","_s","name","setName","email","setEmail","role","setRole","password","setPassword","submitForm","e","preventDefault","setErrorMessage","post","error","response","console","log","data","msg","updateFormValue","updateType","value","dispatch","updateProfile","message","status","children","title","topMargin","className","labelTitle","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/features/settings/profilesettings/index.js"],"sourcesContent":["import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\nimport InputText from '../../../components/Input/InputText'\r\nimport TextAreaInput from '../../../components/Input/TextAreaInput'\r\nimport ToogleInput from '../../../components/Input/ToogleInput'\r\n\r\nfunction ProfileSettings(){\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        setErrorMessage(\"\");\r\n    \r\n        try {\r\n            await axios.post('http://localhost:5000/users', {\r\n                email: email,\r\n                password: password,\r\n            });\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.log(\"Error Response:\", error.response.data);\r\n                setErrorMessage(error.response.data.msg || \"An error occurred\");\r\n            } else {\r\n                setErrorMessage(\"Something went wrong. Please try again.\");\r\n            }\r\n        }\r\n        \r\n        console.log(\"Email:\", email);\r\n        console.log(\"Password:\", password);\r\n\r\n    };\r\n\r\n    const updateFormValue = ({ updateType, value }) => {\r\n        setErrorMessage(\"\");\r\n        if (updateType === \"email\") setEmail(value);\r\n        if (updateType === \"password\") setPassword(value);\r\n    };   \r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Call API to update profile settings changes\r\n    const updateProfile = () => {\r\n        dispatch(showNotification({message : \"Profile Updated\", status : 1}))    \r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <InputText \r\n                        labelTitle=\"Name\" \r\n                        defaultValue=\"Alex\" \r\n                        updateFormValue={updateFormValue}\r\n                    />\r\n                    <InputText \r\n                        labelTitle=\"Email Id\" \r\n                        defaultValue=\"alex@dashwind.com\" \r\n                        updateFormValue={updateFormValue}\r\n                    />\r\n                    <InputText \r\n                        labelTitle=\"Role\" \r\n                        defaultValue=\"Admin\" \r\n                        updateFormValue={updateFormValue}\r\n                    />                               \r\n                    <InputText \r\n                        labelTitle=\"Password\" \r\n                        defaultValue=\"*********\" \r\n                        updateFormValue={updateFormValue}\r\n                    />\r\n                </div>\r\n                <div className=\"divider\" ></div>              \r\n\r\n                <div className=\"mt-16\"><button className=\"btn btn-primary float-right\" onClick={() => updateProfile()}>Update</button></div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileSettings"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}