{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\DashStack\\\\frontend\\\\src\\\\features\\\\leads\\\\components\\\\AddLeadModalBody.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport InputText from '../../../components/Input/InputText';\nimport ErrorText from '../../../components/Typography/ErrorText';\nimport { showNotification } from \"../../common/headerSlice\";\nimport { addNewLead } from \"../leadSlice\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst INITIAL_LEAD_OBJ = {\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\"\n};\nfunction AddLeadModalBody({\n  closeModal\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ);\n  const saveNewLead = () => {\n    if (leadObj.first_name.trim() === \"\") return setErrorMessage(\"First Name is required!\");else if (leadObj.email.trim() === \"\") return setErrorMessage(\"Email id is required!\");else {\n      let newLeadObj = {\n        \"id\": 7,\n        \"email\": leadObj.email,\n        \"first_name\": leadObj.first_name,\n        \"last_name\": leadObj.last_name,\n        \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\n      };\n      dispatch(addNewLead({\n        newLeadObj\n      }));\n      dispatch(showNotification({\n        message: \"New Lead Added!\",\n        status: 1\n      }));\n      closeModal();\n    }\n  };\n  const updateFormValue = ({\n    updateType,\n    value\n  }) => {\n    setErrorMessage(\"\");\n    setLeadObj({\n      ...leadObj,\n      [updateType]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      defaultValue: leadObj.first_name,\n      updateType: \"first_name\",\n      containerStyle: \"mt-4\",\n      labelTitle: \"First Name\",\n      updateFormValue: updateFormValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"text\",\n      defaultValue: leadObj.last_name,\n      updateType: \"last_name\",\n      containerStyle: \"mt-4\",\n      labelTitle: \"Last Name\",\n      updateFormValue: updateFormValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputText, {\n      type: \"email\",\n      defaultValue: leadObj.email,\n      updateType: \"email\",\n      containerStyle: \"mt-4\",\n      labelTitle: \"Email Id\",\n      updateFormValue: updateFormValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n      styleClass: \"mt-16\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-ghost\",\n        onClick: () => closeModal(),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary px-6\",\n        onClick: () => saveNewLead(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(AddLeadModalBody, \"VJK1KhN2+mscDJpv0EGrPe04yuY=\", false, function () {\n  return [useDispatch];\n});\n_c = AddLeadModalBody;\nexport default AddLeadModalBody;\nvar _c;\n$RefreshReg$(_c, \"AddLeadModalBody\");","map":{"version":3,"names":["useState","useDispatch","InputText","ErrorText","showNotification","addNewLead","jsxDEV","_jsxDEV","Fragment","_Fragment","INITIAL_LEAD_OBJ","first_name","last_name","email","AddLeadModalBody","closeModal","_s","dispatch","loading","setLoading","errorMessage","setErrorMessage","leadObj","setLeadObj","saveNewLead","trim","newLeadObj","message","status","updateFormValue","updateType","value","children","type","defaultValue","containerStyle","labelTitle","fileName","_jsxFileName","lineNumber","columnNumber","styleClass","className","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/features/leads/components/AddLeadModalBody.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport InputText from '../../../components/Input/InputText'\r\nimport ErrorText from '../../../components/Typography/ErrorText'\r\nimport { showNotification } from \"../../common/headerSlice\"\r\nimport { addNewLead } from \"../leadSlice\"\r\n\r\nconst INITIAL_LEAD_OBJ = {\r\n    first_name : \"\",\r\n    last_name : \"\",\r\n    email : \"\"\r\n}\r\n\r\nfunction AddLeadModalBody({closeModal}){\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [leadObj, setLeadObj] = useState(INITIAL_LEAD_OBJ)\r\n\r\n\r\n    const saveNewLead = () => {\r\n        if(leadObj.first_name.trim() === \"\")return setErrorMessage(\"First Name is required!\")\r\n        else if(leadObj.email.trim() === \"\")return setErrorMessage(\"Email id is required!\")\r\n        else{\r\n            let newLeadObj = {\r\n                \"id\": 7,\r\n                \"email\": leadObj.email,\r\n                \"first_name\": leadObj.first_name,\r\n                \"last_name\": leadObj.last_name,\r\n                \"avatar\": \"https://reqres.in/img/faces/1-image.jpg\"\r\n            }\r\n            dispatch(addNewLead({newLeadObj}))\r\n            dispatch(showNotification({message : \"New Lead Added!\", status : 1}))\r\n            closeModal()\r\n        }\r\n    }\r\n\r\n    const updateFormValue = ({updateType, value}) => {\r\n        setErrorMessage(\"\")\r\n        setLeadObj({...leadObj, [updateType] : value})\r\n    }\r\n\r\n    return(\r\n        <>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.first_name} updateType=\"first_name\" containerStyle=\"mt-4\" labelTitle=\"First Name\" updateFormValue={updateFormValue}/>\r\n\r\n            <InputText type=\"text\" defaultValue={leadObj.last_name} updateType=\"last_name\" containerStyle=\"mt-4\" labelTitle=\"Last Name\" updateFormValue={updateFormValue}/>\r\n\r\n            <InputText type=\"email\" defaultValue={leadObj.email} updateType=\"email\" containerStyle=\"mt-4\" labelTitle=\"Email Id\" updateFormValue={updateFormValue}/>\r\n\r\n\r\n            <ErrorText styleClass=\"mt-16\">{errorMessage}</ErrorText>\r\n            <div className=\"modal-action\">\r\n                <button  className=\"btn btn-ghost\" onClick={() => closeModal()}>Cancel</button>\r\n                <button  className=\"btn btn-primary px-6\" onClick={() => saveNewLead()}>Save</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddLeadModalBody"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}