{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { BrowserMultiFormatReader } from \"@zxing/library\";\nimport Webcam from \"react-webcam\";\nexport const BarcodeScannerComponent = ({\n  onUpdate,\n  onError,\n  width = \"100%\",\n  height = \"100%\",\n  facingMode = \"environment\",\n  torch,\n  delay = 500,\n  videoConstraints,\n  stopStream\n}) => {\n  const webcamRef = React.useRef(null);\n  const capture = React.useCallback(() => {\n    const codeReader = new BrowserMultiFormatReader();\n    // @ts-ignore\n    const imageSrc = webcamRef?.current?.getScreenshot();\n    if (imageSrc) {\n      codeReader.decodeFromImage(undefined, imageSrc).then(result => {\n        onUpdate(null, result);\n      }).catch(err => {\n        onUpdate(err);\n      });\n    }\n  }, [onUpdate]);\n  React.useEffect(() => {\n    // Turn on the flashlight if prop is defined and device has the capability\n    if (typeof torch === \"boolean\" &&\n    // @ts-ignore\n    navigator?.mediaDevices?.getSupportedConstraints().torch) {\n      // @ts-ignore\n      const stream = webcamRef?.current?.video.srcObject;\n      const track = stream?.getVideoTracks()[0]; // get the active track of the stream\n      if (track && track.getCapabilities().torch && !track.getConstraints().torch) {\n        track.applyConstraints({\n          advanced: [{\n            torch\n          }]\n        }).catch(err => onUpdate(err));\n      }\n    }\n  }, [torch, onUpdate]);\n  React.useEffect(() => {\n    if (stopStream) {\n      // @ts-ignore\n      let stream = webcamRef?.current?.video.srcObject;\n      if (stream) {\n        stream.getTracks().forEach(track => {\n          stream.removeTrack(track);\n          track.stop();\n        });\n        stream = null;\n      }\n    }\n  }, [stopStream]);\n  React.useEffect(() => {\n    const interval = setInterval(capture, delay);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return _jsx(Webcam, {\n    width: width,\n    height: height,\n    ref: webcamRef,\n    screenshotFormat: \"image/jpeg\",\n    videoConstraints: videoConstraints || {\n      facingMode\n    },\n    audio: false,\n    onUserMediaError: onError\n  });\n};\nexport default BarcodeScannerComponent;","map":{"version":3,"names":["jsx","_jsx","React","BrowserMultiFormatReader","Webcam","BarcodeScannerComponent","onUpdate","onError","width","height","facingMode","torch","delay","videoConstraints","stopStream","webcamRef","useRef","capture","useCallback","codeReader","imageSrc","current","getScreenshot","decodeFromImage","undefined","then","result","catch","err","useEffect","navigator","mediaDevices","getSupportedConstraints","stream","video","srcObject","track","getVideoTracks","getCapabilities","getConstraints","applyConstraints","advanced","getTracks","forEach","removeTrack","stop","interval","setInterval","clearInterval","ref","screenshotFormat","audio","onUserMediaError"],"sources":["C:/xampp/htdocs/DashStack/frontend/node_modules/react-qr-barcode-scanner/dist/BarcodeScannerComponent.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { BrowserMultiFormatReader } from \"@zxing/library\";\nimport Webcam from \"react-webcam\";\nexport const BarcodeScannerComponent = ({ onUpdate, onError, width = \"100%\", height = \"100%\", facingMode = \"environment\", torch, delay = 500, videoConstraints, stopStream, }) => {\n    const webcamRef = React.useRef(null);\n    const capture = React.useCallback(() => {\n        const codeReader = new BrowserMultiFormatReader();\n        // @ts-ignore\n        const imageSrc = webcamRef?.current?.getScreenshot();\n        if (imageSrc) {\n            codeReader\n                .decodeFromImage(undefined, imageSrc)\n                .then((result) => {\n                onUpdate(null, result);\n            })\n                .catch((err) => {\n                onUpdate(err);\n            });\n        }\n    }, [onUpdate]);\n    React.useEffect(() => {\n        // Turn on the flashlight if prop is defined and device has the capability\n        if (typeof torch === \"boolean\" &&\n            // @ts-ignore\n            navigator?.mediaDevices?.getSupportedConstraints().torch) {\n            // @ts-ignore\n            const stream = webcamRef?.current?.video.srcObject;\n            const track = stream?.getVideoTracks()[0]; // get the active track of the stream\n            if (track &&\n                track.getCapabilities().torch &&\n                !track.getConstraints().torch) {\n                track\n                    .applyConstraints({\n                    advanced: [{ torch }],\n                })\n                    .catch((err) => onUpdate(err));\n            }\n        }\n    }, [torch, onUpdate]);\n    React.useEffect(() => {\n        if (stopStream) {\n            // @ts-ignore\n            let stream = webcamRef?.current?.video.srcObject;\n            if (stream) {\n                stream.getTracks().forEach((track) => {\n                    stream.removeTrack(track);\n                    track.stop();\n                });\n                stream = null;\n            }\n        }\n    }, [stopStream]);\n    React.useEffect(() => {\n        const interval = setInterval(capture, delay);\n        return () => {\n            clearInterval(interval);\n        };\n    }, []);\n    return (_jsx(Webcam, { width: width, height: height, ref: webcamRef, screenshotFormat: \"image/jpeg\", videoConstraints: videoConstraints || {\n            facingMode,\n        }, audio: false, onUserMediaError: onError }));\n};\nexport default BarcodeScannerComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}