{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\WEB-POS\\\\WEB-POS\\\\src\\\\features\\\\charts\\\\components\\\\StackBarChart.js\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport TitleCard from '../../../components/Cards/TitleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction StackBarChart() {\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    }\n  };\n  const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n  const data = {\n    labels,\n    datasets: [{\n      label: 'Store 1',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(255, 99, 132, 1)'\n    }, {\n      label: 'Store 2',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(53, 162, 235, 1)'\n    }, {\n      label: 'Store 3',\n      data: labels.map(() => {\n        return Math.random() * 1000 + 500;\n      }),\n      backgroundColor: 'rgba(235, 162, 235, 1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(TitleCard, {\n    title: \"Sales\",\n    topMargin: \"mt-2\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_c = StackBarChart;\nexport default StackBarChart;\nvar _c;\n$RefreshReg$(_c, \"StackBarChart\");","map":{"version":3,"names":["Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","Bar","TitleCard","jsxDEV","_jsxDEV","register","StackBarChart","options","responsive","scales","x","stacked","y","labels","data","datasets","label","map","Math","random","backgroundColor","title","topMargin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/WEB-POS/WEB-POS/src/features/charts/components/StackBarChart.js"],"sourcesContent":["import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n  } from 'chart.js';\r\n  import { Bar } from 'react-chartjs-2';\r\n  import TitleCard from '../../../components/Cards/TitleCard';\r\n  \r\n  ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n  \r\n  function StackBarChart(){\r\n  \r\n      const options = {\r\n            responsive: true,\r\n            scales: {\r\n                x: {\r\n                    stacked: true,\r\n                },\r\n                y: {\r\n                    stacked: true,\r\n                },\r\n            },\r\n        };\r\n        \r\n        const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\r\n        \r\n        const data = {\r\n          labels,\r\n          datasets: [\r\n            {\r\n              label: 'Store 1',\r\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n              backgroundColor: 'rgba(255, 99, 132, 1)',\r\n            },\r\n            {\r\n              label: 'Store 2',\r\n              data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n              backgroundColor: 'rgba(53, 162, 235, 1)',\r\n            },\r\n            {\r\n                label: 'Store 3',\r\n                data: labels.map(() => { return Math.random() * 1000 + 500 }),\r\n                backgroundColor: 'rgba(235, 162, 235, 1)',\r\n              },\r\n          ],\r\n        };\r\n  \r\n      return(\r\n        <TitleCard title={\"Sales\"} topMargin=\"mt-2\">\r\n              <Bar options={options} data={data} />\r\n        </TitleCard>\r\n  \r\n      )\r\n  }\r\n  \r\n  \r\n  export default StackBarChart"],"mappings":";AAAA,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,SAAS,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5DV,OAAO,CAACW,QAAQ,CAACV,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,SAASM,aAAaA,CAAA,EAAE;EAEpB,MAAMC,OAAO,GAAG;IACVC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EAED,MAAME,MAAM,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC;EAE/E,MAAMC,IAAI,GAAG;IACXD,MAAM;IACNE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC,EACD;MACEJ,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC,EACD;MACIJ,KAAK,EAAE,SAAS;MAChBF,IAAI,EAAED,MAAM,CAACI,GAAG,CAAC,MAAM;QAAE,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG;MAAC,CAAC,CAAC;MAC7DC,eAAe,EAAE;IACnB,CAAC;EAEP,CAAC;EAEH,oBACEhB,OAAA,CAACF,SAAS;IAACmB,KAAK,EAAE,OAAQ;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,eACrCnB,OAAA,CAACH,GAAG;MAACM,OAAO,EAAEA,OAAQ;MAACO,IAAI,EAAEA;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAGlB;AAACC,EAAA,GA3CQtB,aAAa;AA8CtB,eAAeA,aAAa;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}