{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\DashStack\\\\frontend\\\\src\\\\components\\\\Input\\\\ToogleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToogleInput({\n  labelTitle,\n  labelStyle,\n  type,\n  containerStyle,\n  defaultValue,\n  placeholder,\n  updateFormValue,\n  updateType\n}) {\n  _s();\n  const [value, setValue] = useState(defaultValue);\n  const updateToogleValue = () => {\n    setValue(!value);\n    updateFormValue({\n      updateType,\n      value: !value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control w-full ${containerStyle}`,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label cursor-pointer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label-text text-base-content \" + labelStyle,\n        children: labelTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"toggle\",\n        checked: value,\n        onChange: e => updateToogleValue()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(ToogleInput, \"+di++irDcPspjmhJVP9frUKGzpo=\");\n_c = ToogleInput;\nexport default ToogleInput;\nvar _c;\n$RefreshReg$(_c, \"ToogleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ToogleInput","labelTitle","labelStyle","type","containerStyle","defaultValue","placeholder","updateFormValue","updateType","_s","value","setValue","updateToogleValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","checked","onChange","e","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/components/Input/ToogleInput.js"],"sourcesContent":["import { useState } from \"react\"\r\n\r\n\r\nfunction ToogleInput({labelTitle, labelStyle, type, containerStyle, defaultValue, placeholder, updateFormValue, updateType}){\r\n\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    const updateToogleValue = () => {\r\n        setValue(!value)\r\n        updateFormValue({updateType, value : !value})\r\n    }\r\n\r\n    return(\r\n        <div className={`form-control w-full ${containerStyle}`}>\r\n            <label className=\"label cursor-pointer\">\r\n                <span className={\"label-text text-base-content \" + labelStyle}>{labelTitle}</span>\r\n                <input type=\"checkbox\" className=\"toggle\" checked={value}  onChange={(e) => updateToogleValue()}/>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ToogleInput\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,WAAWA,CAAC;EAACC,UAAU;EAAEC,UAAU;EAAEC,IAAI;EAAEC,cAAc;EAAEC,YAAY;EAAEC,WAAW;EAAEC,eAAe;EAAEC;AAAU,CAAC,EAAC;EAAAC,EAAA;EAExH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAACQ,YAAY,CAAC;EAEhD,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC5BD,QAAQ,CAAC,CAACD,KAAK,CAAC;IAChBH,eAAe,CAAC;MAACC,UAAU;MAAEE,KAAK,EAAG,CAACA;IAAK,CAAC,CAAC;EACjD,CAAC;EAED,oBACIX,OAAA;IAAKc,SAAS,EAAE,uBAAuBT,cAAc,EAAG;IAAAU,QAAA,eACpDf,OAAA;MAAOc,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCf,OAAA;QAAMc,SAAS,EAAE,+BAA+B,GAAGX,UAAW;QAAAY,QAAA,EAAEb;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClFnB,OAAA;QAAOI,IAAI,EAAC,UAAU;QAACU,SAAS,EAAC,QAAQ;QAACM,OAAO,EAAET,KAAM;QAAEU,QAAQ,EAAGC,CAAC,IAAKT,iBAAiB,CAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACT,EAAA,CAjBQT,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AAoBpB,eAAeA,WAAW;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}