{"ast":null,"code":"import axios from \"axios\";\nconst checkAuth = async () => {\n  const token = localStorage.getItem(\"token\");\n  const PUBLIC_ROUTES = [\"login\", \"forgot-password\", \"register\", \"documentation\"];\n  const isPublicPage = PUBLIC_ROUTES.some(r => window.location.href.includes(r));\n  if (!token && !isPublicPage) {\n    window.location.href = '/login';\n    return false;\n  } else {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    console.log(token);\n\n    // Cek validitas session dengan memanggil endpoint Me\n    try {\n      const response = await axios.get('/api/me'); // Sesuaikan endpoint dengan yang Anda miliki\n      // Jika berhasil, berarti session masih valid\n      return token;\n    } catch (error) {\n      // Jika terjadi error (misalnya 401), redirect ke login\n      if (error.response && error.response.status === 401) {\n        window.location.href = '/login';\n      }\n      return false;\n    }\n  }\n};\nexport default checkAuth;","map":{"version":3,"names":["axios","checkAuth","token","localStorage","getItem","PUBLIC_ROUTES","isPublicPage","some","r","window","location","href","includes","defaults","headers","common","console","log","response","get","error","status"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/app/auth.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst checkAuth = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const PUBLIC_ROUTES = [\"login\", \"forgot-password\", \"register\", \"documentation\"];\r\n    const isPublicPage = PUBLIC_ROUTES.some(r => window.location.href.includes(r));\r\n\r\n    if (!token && !isPublicPage) {\r\n        window.location.href = '/login';\r\n        return false;\r\n    } else {\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        console.log(token);\r\n\r\n        // Cek validitas session dengan memanggil endpoint Me\r\n        try {\r\n            const response = await axios.get('/api/me'); // Sesuaikan endpoint dengan yang Anda miliki\r\n            // Jika berhasil, berarti session masih valid\r\n            return token;\r\n        } catch (error) {\r\n            // Jika terjadi error (misalnya 401), redirect ke login\r\n            if (error.response && error.response.status === 401) {\r\n                window.location.href = '/login';\r\n            }\r\n            return false;\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nexport default checkAuth;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,aAAa,GAAG,CAAC,OAAO,EAAE,iBAAiB,EAAE,UAAU,EAAE,eAAe,CAAC;EAC/E,MAAMC,YAAY,GAAGD,aAAa,CAACE,IAAI,CAACC,CAAC,IAAIC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAACJ,CAAC,CAAC,CAAC;EAE9E,IAAI,CAACN,KAAK,IAAI,CAACI,YAAY,EAAE;IACzBG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B,OAAO,KAAK;EAChB,CAAC,MAAM;IACHX,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUb,KAAK,EAAE;IAClEc,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;;IAElB;IACA,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;MAC7C;MACA,OAAOjB,KAAK;IAChB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZ;MACA,IAAIA,KAAK,CAACF,QAAQ,IAAIE,KAAK,CAACF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACjDZ,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACnC;MACA,OAAO,KAAK;IAChB;EAEJ;AACJ,CAAC;AAED,eAAeV,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}