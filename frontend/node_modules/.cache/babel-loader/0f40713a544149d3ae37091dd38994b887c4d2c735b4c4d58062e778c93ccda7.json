{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\DashStack\\\\frontend\\\\src\\\\features\\\\settings\\\\profilesettings\\\\index.js\",\n  _s = $RefreshSig$();\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TitleCard from \"../../../components/Cards/TitleCard\";\nimport { showNotification } from '../../common/headerSlice';\nimport InputText from '../../../components/Input/InputText';\nimport TextAreaInput from '../../../components/Input/TextAreaInput';\nimport ToogleInput from '../../../components/Input/ToogleInput';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProfileSettings() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [role, setRole] = useState('');\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    refreshToken();\n  }, []);\n\n  // Fungsi untuk refresh token jika diperlukan\n  const refreshToken = async () => {\n    try {\n      const response = await axiosJWT.get('http://localhost:5000/token');\n      setToken(response.data.accessToken);\n      const decoded = jwtDecode(response.data.accessToken);\n      console.log(decoded);\n      setName(decoded.name);\n      setEmail(decoded.email);\n      setExpire(decoded.exp);\n    } catch (error) {\n      navigate('/login'); // Arahkan ke halaman login jika terjadi kesalahan\n    }\n  };\n  const getUsers = async () => {\n    try {\n      console.log(\"Token:\", token); // Debugging\n      const response = await axios.get('http://localhost:5000/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      if (error.response) {\n        console.error(\"Error Response:\", error.response.data);\n      } else {\n        console.error(\"Error:\", error.message);\n      }\n    }\n  };\n  const updateFormValue = ({\n    updateType,\n    value\n  }) => {\n    setErrorMessage(\"\");\n    if (updateType === \"name\") setName(value);\n    if (updateType === \"email\") setEmail(value);\n    if (updateType === \"role\") setRole(value);\n    if (updateType === \"password\") setPassword(value);\n  };\n  const dispatch = useDispatch();\n\n  // Call API to update profile settings changes\n  const updateProfile = () => {\n    dispatch(showNotification({\n      message: \"Profile Updated\",\n      status: 1\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TitleCard, {\n      title: \"Profile Settings\",\n      topMargin: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Name\",\n          defaultValue: name,\n          updateFormValue: ({\n            value\n          }) => updateFormValue({\n            updateType: \"name\",\n            value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Email\",\n          defaultValue: email,\n          updateFormValue: ({\n            value\n          }) => updateFormValue({\n            updateType: \"email\",\n            value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Role\",\n          defaultValue: role,\n          updateFormValue: ({\n            value\n          }) => updateFormValue({\n            updateType: \"role\",\n            value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputText, {\n          labelTitle: \"Password\",\n          defaultValue: password,\n          updateFormValue: ({\n            value\n          }) => updateFormValue({\n            updateType: \"password\",\n            value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-16\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary float-right\",\n          onClick: () => updateProfile(),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ProfileSettings, \"y2MEkS8tzMZWWo91A25YNNYuXM0=\", false, function () {\n  return [useDispatch];\n});\n_c = ProfileSettings;\nexport default ProfileSettings;\nvar _c;\n$RefreshReg$(_c, \"ProfileSettings\");","map":{"version":3,"names":["moment","useEffect","useState","axios","jwtDecode","useNavigate","useDispatch","useSelector","TitleCard","showNotification","InputText","TextAreaInput","ToogleInput","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileSettings","_s","name","setName","email","setEmail","role","setRole","errorMessage","setErrorMessage","password","setPassword","refreshToken","response","axiosJWT","get","setToken","data","accessToken","decoded","console","log","setExpire","exp","error","navigate","getUsers","token","headers","Authorization","message","updateFormValue","updateType","value","dispatch","updateProfile","status","children","title","topMargin","className","labelTitle","defaultValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/features/settings/profilesettings/index.js"],"sourcesContent":["import moment from \"moment\"\r\nimport { useEffect, useState } from \"react\"\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\"\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TitleCard from \"../../../components/Cards/TitleCard\"\r\nimport { showNotification } from '../../common/headerSlice'\r\nimport InputText from '../../../components/Input/InputText'\r\nimport TextAreaInput from '../../../components/Input/TextAreaInput'\r\nimport ToogleInput from '../../../components/Input/ToogleInput'\r\n\r\nfunction ProfileSettings(){\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(\"\")\r\n    const [password, setPassword] = useState('');\r\n\r\n    useEffect(() => {\r\n        refreshToken();\r\n    }, []);\r\n\r\n    // Fungsi untuk refresh token jika diperlukan\r\n    const refreshToken = async () => {\r\n        try {\r\n            const response = await axiosJWT.get('http://localhost:5000/token');\r\n            setToken(response.data.accessToken);\r\n            const decoded = jwtDecode(response.data.accessToken);\r\n            console.log(decoded);\r\n            setName(decoded.name);\r\n            setEmail(decoded.email);\r\n            setExpire(decoded.exp);\r\n        } catch (error) {\r\n            navigate('/login'); // Arahkan ke halaman login jika terjadi kesalahan\r\n        }\r\n    };\r\n\r\n    const getUsers = async () => {\r\n        try {\r\n            console.log(\"Token:\", token); // Debugging\r\n            const response = await axios.get('http://localhost:5000/users', {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            });\r\n            console.log(response.data);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"Error Response:\", error.response.data);\r\n            } else {\r\n                console.error(\"Error:\", error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateFormValue = ({ updateType, value }) => {\r\n        setErrorMessage(\"\");\r\n        if (updateType === \"name\") setName(value);\r\n        if (updateType === \"email\") setEmail(value);\r\n        if (updateType === \"role\") setRole(value);\r\n        if (updateType === \"password\") setPassword(value);\r\n    };\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Call API to update profile settings changes\r\n    const updateProfile = () => {\r\n        dispatch(showNotification({message : \"Profile Updated\", status : 1}))    \r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <TitleCard title=\"Profile Settings\" topMargin=\"mt-2\">\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <InputText\r\n                        labelTitle=\"Name\"\r\n                        defaultValue={name}\r\n                        updateFormValue={({ value }) => updateFormValue({ updateType: \"name\", value })}\r\n                    />\r\n                    <InputText\r\n                        labelTitle=\"Email\"\r\n                        defaultValue={email}\r\n                        updateFormValue={({ value }) => updateFormValue({ updateType: \"email\", value })}\r\n                    />\r\n                    <InputText\r\n                        labelTitle=\"Role\"\r\n                        defaultValue={role}\r\n                        updateFormValue={({ value }) => updateFormValue({ updateType: \"role\", value })}\r\n                    />\r\n                    <InputText\r\n                        labelTitle=\"Password\"\r\n                        defaultValue={password}\r\n                        updateFormValue={({ value }) => updateFormValue({ updateType: \"password\", value })}\r\n                    />\r\n                </div>\r\n                <div className=\"divider\" ></div>              \r\n\r\n                <div className=\"mt-16\"><button className=\"btn btn-primary float-right\" onClick={() => updateProfile()}>Update</button></div>\r\n            </TitleCard>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileSettings"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}