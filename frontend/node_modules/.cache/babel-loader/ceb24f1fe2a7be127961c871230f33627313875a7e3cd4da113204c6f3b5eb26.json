{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\DashStack\\\\frontend\\\\src\\\\features\\\\dashboard\\\\components\\\\DashboardTopBar.js\",\n  _s = $RefreshSig$();\nimport SelectBox from \"../../../components/Input/SelectBox\";\nimport ArrowDownTrayIcon from '@heroicons/react/24/outline/ArrowDownTrayIcon';\nimport ShareIcon from '@heroicons/react/24/outline/ShareIcon';\nimport EnvelopeIcon from '@heroicons/react/24/outline/EnvelopeIcon';\nimport EllipsisVerticalIcon from '@heroicons/react/24/outline/EllipsisVerticalIcon';\nimport ArrowPathIcon from '@heroicons/react/24/outline/ArrowPathIcon';\nimport { useState } from \"react\";\nimport Datepicker from \"react-tailwindcss-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst periodOptions = [{\n  name: \"Today\",\n  value: \"TODAY\"\n}, {\n  name: \"Yesterday\",\n  value: \"YESTERDAY\"\n}, {\n  name: \"This Week\",\n  value: \"THIS_WEEK\"\n}, {\n  name: \"Last Week\",\n  value: \"LAST_WEEK\"\n}, {\n  name: \"This Month\",\n  value: \"THIS_MONTH\"\n}, {\n  name: \"Last Month\",\n  value: \"LAST_MONTH\"\n}];\nfunction DashboardTopBar({\n  updateDashboardPeriod\n}) {\n  _s();\n  const [dateValue, setDateValue] = useState({\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const handleDatePickerValueChange = newValue => {\n    console.log(\"newValue:\", newValue);\n    setDateValue(newValue);\n    updateDashboardPeriod(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-2 gap-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: /*#__PURE__*/_jsxDEV(Datepicker, {\n        containerClassName: \"w-72 \",\n        value: dateValue,\n        theme: \"light\",\n        inputClassName: \"input input-bordered w-72\",\n        popoverDirection: \"down\",\n        toggleClassName: \"invisible\",\n        onChange: handleDatePickerValueChange,\n        showShortcuts: true,\n        primaryColor: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(DashboardTopBar, \"VwY5cGc9mv7JeT8fXDSCaVPx7rk=\");\n_c = DashboardTopBar;\nexport default DashboardTopBar;\nvar _c;\n$RefreshReg$(_c, \"DashboardTopBar\");","map":{"version":3,"names":["SelectBox","ArrowDownTrayIcon","ShareIcon","EnvelopeIcon","EllipsisVerticalIcon","ArrowPathIcon","useState","Datepicker","jsxDEV","_jsxDEV","periodOptions","name","value","DashboardTopBar","updateDashboardPeriod","_s","dateValue","setDateValue","startDate","Date","endDate","handleDatePickerValueChange","newValue","console","log","className","children","containerClassName","theme","inputClassName","popoverDirection","toggleClassName","onChange","showShortcuts","primaryColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/features/dashboard/components/DashboardTopBar.js"],"sourcesContent":["import SelectBox from \"../../../components/Input/SelectBox\"\r\nimport ArrowDownTrayIcon  from '@heroicons/react/24/outline/ArrowDownTrayIcon'\r\nimport ShareIcon  from '@heroicons/react/24/outline/ShareIcon'\r\nimport EnvelopeIcon  from '@heroicons/react/24/outline/EnvelopeIcon'\r\nimport EllipsisVerticalIcon  from '@heroicons/react/24/outline/EllipsisVerticalIcon'\r\nimport ArrowPathIcon  from '@heroicons/react/24/outline/ArrowPathIcon'\r\nimport { useState } from \"react\"\r\nimport Datepicker from \"react-tailwindcss-datepicker\"; \r\n\r\n\r\n\r\nconst periodOptions = [\r\n    {name : \"Today\", value : \"TODAY\"},\r\n    {name : \"Yesterday\", value : \"YESTERDAY\"},\r\n    {name : \"This Week\", value : \"THIS_WEEK\"},\r\n    {name : \"Last Week\", value : \"LAST_WEEK\"},\r\n    {name : \"This Month\", value : \"THIS_MONTH\"},\r\n    {name : \"Last Month\", value : \"LAST_MONTH\"},\r\n]\r\n\r\nfunction DashboardTopBar({updateDashboardPeriod}){\r\n\r\n        const [dateValue, setDateValue] = useState({ \r\n            startDate: new Date(), \r\n            endDate: new Date() \r\n        }); \r\n        \r\n        const handleDatePickerValueChange = (newValue) => {\r\n            console.log(\"newValue:\", newValue); \r\n            setDateValue(newValue); \r\n            updateDashboardPeriod(newValue)\r\n        } \r\n\r\n\r\n    return(\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n            <div className=\"\">\r\n            <Datepicker \r\n                containerClassName=\"w-72 \" \r\n                value={dateValue} \r\n                theme={\"light\"}\r\n                inputClassName=\"input input-bordered w-72\" \r\n                popoverDirection={\"down\"}\r\n                toggleClassName=\"invisible\"\r\n                onChange={handleDatePickerValueChange} \r\n                showShortcuts={true} \r\n                primaryColor={\"white\"} \r\n            /> \r\n            {/* <SelectBox \r\n                options={periodOptions}\r\n                labelTitle=\"Period\"\r\n                placeholder=\"Select date range\"\r\n                containerStyle=\"w-72\"\r\n                labelStyle=\"hidden\"\r\n                defaultValue=\"TODAY\"\r\n                updateFormValue={updateSelectBoxValue}\r\n            /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardTopBar"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,qCAAqC;AAC3D,OAAOC,iBAAiB,MAAO,+CAA+C;AAC9E,OAAOC,SAAS,MAAO,uCAAuC;AAC9D,OAAOC,YAAY,MAAO,0CAA0C;AACpE,OAAOC,oBAAoB,MAAO,kDAAkD;AACpF,OAAOC,aAAa,MAAO,2CAA2C;AACtE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItD,MAAMC,aAAa,GAAG,CAClB;EAACC,IAAI,EAAG,OAAO;EAAEC,KAAK,EAAG;AAAO,CAAC,EACjC;EAACD,IAAI,EAAG,WAAW;EAAEC,KAAK,EAAG;AAAW,CAAC,EACzC;EAACD,IAAI,EAAG,WAAW;EAAEC,KAAK,EAAG;AAAW,CAAC,EACzC;EAACD,IAAI,EAAG,WAAW;EAAEC,KAAK,EAAG;AAAW,CAAC,EACzC;EAACD,IAAI,EAAG,YAAY;EAAEC,KAAK,EAAG;AAAY,CAAC,EAC3C;EAACD,IAAI,EAAG,YAAY;EAAEC,KAAK,EAAG;AAAY,CAAC,CAC9C;AAED,SAASC,eAAeA,CAAC;EAACC;AAAqB,CAAC,EAAC;EAAAC,EAAA;EAEzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACvCY,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC;EACtB,CAAC,CAAC;EAEF,MAAME,2BAA2B,GAAIC,QAAQ,IAAK;IAC9CC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;IAClCL,YAAY,CAACK,QAAQ,CAAC;IACtBR,qBAAqB,CAACQ,QAAQ,CAAC;EACnC,CAAC;EAGL,oBACIb,OAAA;IAAKgB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eAClDjB,OAAA;MAAKgB,SAAS,EAAC,EAAE;MAAAC,QAAA,eACjBjB,OAAA,CAACF,UAAU;QACPoB,kBAAkB,EAAC,OAAO;QAC1Bf,KAAK,EAAEI,SAAU;QACjBY,KAAK,EAAE,OAAQ;QACfC,cAAc,EAAC,2BAA2B;QAC1CC,gBAAgB,EAAE,MAAO;QACzBC,eAAe,EAAC,WAAW;QAC3BC,QAAQ,EAAEX,2BAA4B;QACtCY,aAAa,EAAE,IAAK;QACpBC,YAAY,EAAE;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACvB,EAAA,CAxCQF,eAAe;AAAA0B,EAAA,GAAf1B,eAAe;AA0CxB,eAAeA,eAAe;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}