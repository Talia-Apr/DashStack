{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const getUsersContent = createAsyncThunk('users/getContent', async () => {\n  const response = await axios.get('http://localhost:5000/users?page=1', {});\n  return response.data;\n});\nexport const addUser = createAsyncThunk('users/addUser', async newUser => {\n  const response = await axios.post('http://localhost:5000/users', newUser);\n  return response.data; // Mengembalikan data pengguna yang ditambahkan\n});\nexport const editUser = createAsyncThunk('users/editUser', async ({\n  id,\n  updatedUser\n}) => {\n  const response = await axios.put(`/api/users/${id}`, updatedUser);\n  return response.data; // Mengembalikan data pengguna yang telah diperbarui\n});\nexport const deleteUserById = createAsyncThunk('users/deleteUser', async id => {\n  await axios.delete(`/api/users/${id}`);\n  return id; // Mengembalikan id pengguna yang telah dihapus\n});\nexport const UsersSlice = createSlice({\n  name: 'User',\n  initialState: {\n    isLoading: false,\n    Users: []\n  },\n  reducers: {\n    addNewUser: (state, action) => {\n      const {\n        newUserObj\n      } = action.payload;\n      state.Users = [...state.Users, newUserObj];\n    },\n    deleteUser: (state, action) => {\n      const {\n        index\n      } = action.payload;\n      state.Users.splice(index, 1);\n    },\n    editUser: (state, action) => {\n      const {\n        index,\n        updatedUserObj\n      } = action.payload;\n      state.Users[index] = {\n        ...state.Users[index],\n        ...updatedUserObj\n      };\n    }\n  },\n  extraReducers: {\n    [getUsersContent.pending]: state => {\n      state.isLoading = true;\n    },\n    [getUsersContent.fulfilled]: (state, action) => {\n      state.Users = action.payload.data;\n      state.isLoading = false;\n    },\n    [getUsersContent.rejected]: state => {\n      state.isLoading = false;\n    },\n    [addUser.fulfilled]: (state, action) => {\n      state.Users.push(action.payload); // Menambahkan pengguna baru ke state\n    },\n    [editUserById.fulfilled]: (state, action) => {\n      const index = state.Users.findIndex(user => user.id === action.payload.id);\n      if (index !== -1) {\n        state.Users[index] = action.payload; // Memperbarui pengguna yang ada\n      }\n    },\n    [deleteUserById.fulfilled]: (state, action) => {\n      const index = state.Users.findIndex(user => user.id === action.payload);\n      if (index !== -1) {\n        state.Users.splice(index, 1); // Menghapus pengguna dari state\n      }\n    }\n  }\n});\nexport const {\n  addNewUser,\n  deleteUser,\n  editUserById\n} = UsersSlice.actions;\nexport default UsersSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","getUsersContent","response","get","data","addUser","newUser","post","editUser","id","updatedUser","put","deleteUserById","delete","UsersSlice","name","initialState","isLoading","Users","reducers","addNewUser","state","action","newUserObj","payload","deleteUser","index","splice","updatedUserObj","extraReducers","pending","fulfilled","rejected","push","editUserById","findIndex","user","actions","reducer"],"sources":["C:/xampp/htdocs/DashStack/frontend/src/features/people/user/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nexport const getUsersContent = createAsyncThunk('users/getContent', async () => {\r\n    const response = await axios.get('http://localhost:5000/users?page=1', {});\r\n    return response.data;\r\n});\r\n\r\nexport const addUser = createAsyncThunk('users/addUser', async (newUser) => {\r\n    const response = await axios.post('http://localhost:5000/users', newUser);\r\n    return response.data; // Mengembalikan data pengguna yang ditambahkan\r\n});\r\n\r\nexport const editUser = createAsyncThunk('users/editUser', async ({ id, updatedUser }) => {\r\n    const response = await axios.put(`/api/users/${id}`, updatedUser);\r\n    return response.data; // Mengembalikan data pengguna yang telah diperbarui\r\n});\r\n\r\nexport const deleteUserById = createAsyncThunk('users/deleteUser', async (id) => {\r\n    await axios.delete(`/api/users/${id}`);\r\n    return id; // Mengembalikan id pengguna yang telah dihapus\r\n});\r\n\r\nexport const UsersSlice = createSlice({\r\n    name: 'User',\r\n    initialState: {\r\n        isLoading: false,\r\n        Users: [],\r\n    },\r\n    \r\n    reducers: {\r\n        addNewUser: (state, action) => {\r\n            const { newUserObj } = action.payload;\r\n            state.Users = [...state.Users, newUserObj];\r\n        },\r\n\r\n        deleteUser: (state, action) => {\r\n            const { index } = action.payload;\r\n            state.Users.splice(index, 1);\r\n        },\r\n\r\n        editUser: (state, action) => {\r\n            const { index, updatedUserObj } = action.payload;\r\n            state.Users[index] = { ...state.Users[index], ...updatedUserObj };\r\n        },\r\n    },\r\n\r\n    extraReducers: {\r\n        [getUsersContent.pending]: (state) => {\r\n            state.isLoading = true;\r\n        },\r\n        [getUsersContent.fulfilled]: (state, action) => {\r\n            state.Users = action.payload.data;\r\n            state.isLoading = false;\r\n        },\r\n        [getUsersContent.rejected]: (state) => {\r\n            state.isLoading = false;\r\n        },\r\n        [addUser.fulfilled]: (state, action) => {\r\n            state.Users.push(action.payload); // Menambahkan pengguna baru ke state\r\n        },\r\n        [editUserById.fulfilled]: (state, action) => {\r\n            const index = state.Users.findIndex(user => user.id === action.payload.id);\r\n            if (index !== -1) {\r\n                state.Users[index] = action.payload; // Memperbarui pengguna yang ada\r\n            }\r\n        },\r\n        [deleteUserById.fulfilled]: (state, action) => {\r\n            const index = state.Users.findIndex(user => user.id === action.payload);\r\n            if (index !== -1) {\r\n                state.Users.splice(index, 1); // Menghapus pengguna dari state\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addNewUser, deleteUser, editUserById } = UsersSlice.actions;\r\n\r\nexport default UsersSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}